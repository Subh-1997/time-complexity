1.Given an integer array nums, rotate the array to the right by k steps, where k is non-negative.
Example 1:

Input: nums = [1,2,3,4,5,6,7], k = 3
Output: [5,6,7,1,2,3,4]
Explanation:
rotate 1 steps to the right: [7,1,2,3,4,5,6]
rotate 2 steps to the right: [6,7,1,2,3,4,5]
rotate 3 steps to the right: [5,6,7,1,2,3,4]
class Solution {
    public static void rotateArray(int[] nums,int k,int n){
        if(n==0){
            return;
        }
        k=k%n;
        int temp []=new int[k];
        for(int i=0;i<k;i++){
            temp[i]=nums[n-k+i];
        } 

        for(int i=n-k-1;i>=0;i--){
            nums[i+k]=nums[i];
        }

           for (int i = 0; i < k; i++) {
            nums[i] = temp[i];
        }
    }
    public void rotate(int[] nums, int k) {
        int n=nums.length;
        rotateArray(nums,k,n);
    }
}
Time complexity:O(N) Space complexity:O(K)
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
